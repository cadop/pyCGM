import unittest
import pyCGM_Single.pyCGM as pyCGM
import numpy as np

rounding_precision = 8

class TestUpperBodyAxis(unittest.TestCase):

    def testHeadJC(self):
        frame = {'LFHD': np.array([184.55158997, 409.68713379, 1721.34289551]),
                 'RFHD': np.array([325.82983398, 402.55450439, 1722.49816895]),
                 'LBHD': np.array([197.8621521 , 251.28889465, 1696.90197754]),
                 'RBHD': np.array([304.39898682, 242.91339111, 1694.97497559])}
        vsk = {'HeadOffset': 0.2571990469310653}
        expected = [[[255.21685582510975, 407.11593887758056, 1721.8253843887082],
                     [254.19105385179665, 406.146809183757, 1721.9176771191715],
                     [255.19034370229795, 406.2160090443217, 1722.9159912851449]],
                    [255.19071197509766, 406.1208190917969, 1721.9205322265625]]

        result = pyCGM.headJC(frame, vsk)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

    def testThoraxJC(self):
        frame = {'C7': np.array([251.22619629, 229.75683594, 1533.77624512]),
                 'T10': np.array([228.64323425, 192.32041931, 1279.6418457 ]),
                 'CLAV': np.array([256.78051758, 371.28042603, 1459.70300293]),
                 'STRN': np.array([251.67492676, 414.10391235, 1292.08508301])}
        expected = [[[256.23991128535846, 365.30496976939753, 1459.662169500559],
                     [257.1435863244796, 364.21960599061947, 1459.588978712983],
                     [256.0843053658035, 364.32180498523223, 1458.6575930699294]],
                    [256.149810236564, 364.3090603933987, 1459.6553639290375]]

        result = pyCGM.thoraxJC(frame)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

    def testFindShoulderJC(self):
        frame = {'RSHO': np.array([428.88476562, 270.552948, 1500.73010254]),
                 'LSHO': np.array([68.24668121, 269.01049805, 1510.1072998])}
        thorax = [[[256.23991128535846, 365.30496976939753, 1459.662169500559],
                   [257.1435863244796, 364.21960599061947, 1459.588978712983],
                   [256.0843053658035, 364.32180498523223, 1458.6575930699294]],
                  [256.149810236564, 364.3090603933987, 1459.6553639290375]]
        wand = [[255.92550222678443, 364.3226950497605, 1460.6297868417887],
                [256.42380097331767, 364.27770361353487, 1460.6165849382387]]
        vsk = {'RightShoulderOffset': 40.0, 'LeftShoulderOffset': 40.0}
        expected = [np.array([429.66951995,  275.06718615, 1453.95397813]),
                    np.array([64.51952734,  274.93442161, 1463.6313334])]

        result = pyCGM.findshoulderJC(frame, thorax, wand, vsk)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

    def testShoulderAxisCalc(self):
        frame = {'RSHO': np.array([428.88476562, 270.552948, 1500.73010254]),
                 'LSHO': np.array([68.24668121, 269.01049805, 1510.1072998])}
        thorax = [[[256.23991128535846, 365.30496976939753, 1459.662169500559],
                   [257.1435863244796, 364.21960599061947, 1459.588978712983],
                   [256.0843053658035, 364.32180498523223, 1458.6575930699294]],
                  [256.149810236564, 364.3090603933987, 1459.6553639290375]]
        shoulderJC = [np.array([429.66951995, 275.06718615, 1453.95397813]),
                      np.array([64.51952734, 274.93442161, 1463.6313334 ])]
        wand = [[255.92550222678443, 364.3226950497605, 1460.6297868417887],
                [256.42380097331767, 364.27770361353487, 1460.6165849382387]]
        expected = [[np.array([429.66951995, 275.06718615, 1453.95397813]),
                     np.array([64.51952734, 274.93442161, 1463.6313334 ])],
                    [[[430.12731330596756, 275.9513661907463, 1454.0469882869343],
                      [429.6862168456729, 275.1632337671314, 1452.9587414419757],
                      [428.78061812142147, 275.5243518770602, 1453.9831850281803]],
                     [[64.10400324869988, 275.83192826468195, 1463.7790545425955],
                      [64.59882848203122, 274.80838068265837, 1464.620183745389],
                      [65.42564601518438, 275.3570272042577, 1463.6125331307376]]]]

        result = pyCGM.shoulderAxisCalc(frame, thorax, shoulderJC, wand)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

    def testElbowJointCenter(self):
        frame = {'RSHO': np.array([428.88476562, 270.552948, 1500.73010254]),
                 'LSHO': np.array([68.24668121, 269.01049805, 1510.1072998]),
                 'RELB': np.array([658.90338135, 326.07580566, 1285.28515625]),
                 'LELB': np.array([-156.32162476, 335.2583313, 1287.39916992]),
                 'RWRA': np.array([ 776.51898193, 495.68103027, 1108.38464355]),
                 'RWRB': np.array([ 830.9072876 , 436.75341797, 1119.11901855]),
                 'LWRA': np.array([-249.28146362, 525.32977295, 1117.09057617]),
                 'LWRB': np.array([-311.77532959, 477.22512817, 1125.1619873 ])}
        thorax = [[[256.23991128535846, 365.30496976939753, 1459.662169500559],
                [257.1435863244796, 364.21960599061947, 1459.588978712983],
                [256.0843053658035, 364.32180498523223, 1458.6575930699294]],
                  [256.149810236564, 364.3090603933987, 1459.6553639290375]]
        shoulderJC = [np.array([429.66951995, 275.06718615, 1453.95397813]),
                      np.array([64.51952734, 274.93442161, 1463.6313334])]
        wand = [[255.92550222678443, 364.3226950497605, 1460.6297868417887],
                [256.42380097331767, 364.27770361353487, 1460.6165849382387]]
        vsk = {'RightElbowWidth': 74.0, 'LeftElbowWidth': 74.0,
               'RightWristWidth': 55.0, 'LeftWristWidth': 55.0}
        expected = [[np.array([633.66707587, 304.95542115, 1256.07799541]),
                     np.array([-129.16952218, 316.8671644, 1258.06440717])],
                    [[[633.8107013869995, 303.96579004975194, 1256.07658506845],
                      [634.3524799178464, 305.0538658933253, 1256.799473014224],
                      [632.9532180390149, 304.85083190737765, 1256.770431750491]],
                     [[-129.32391792749496, 315.8807291324946, 1258.008662931836],
                      [-128.45117135279028, 316.79382333592827, 1257.3726028780698],
                      [-128.49119037560908, 316.72030884193634, 1258.7843373067021]]],
                    [[793.3281430325068, 451.2913478825204, 1084.4325513020426],
                     [-272.4594189740742, 485.801522109477, 1091.3666238350822]]]

        result = pyCGM.elbowJointCenter(frame, thorax, shoulderJC, wand, vsk)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)
        np.testing.assert_almost_equal(result[2], expected[2], rounding_precision)

    def testWristJointCenter(self):
        frame = {'RWRA': np.array([ 776.51898193,  495.68103027, 1108.38464355]),
                 'RWRB': np.array([ 830.9072876 ,  436.75341797, 1119.11901855]),
                 'LWRA': np.array([-249.28146362, 525.32977295, 1117.09057617]),
                 'LWRB': np.array([-311.77532959, 477.22512817, 1125.1619873]),
                 'RFIN': np.array([863.71374512, 524.4475708, 1074.54248047]),
                 'LFIN': np.array([-326.65890503, 558.34338379, 1091.04284668])}
        shoulderJC = [np.array([429.66951995, 275.06718615, 1453.95397813]),
                      np.array([64.51952734, 274.93442161, 1463.6313334])]
        wand = [[255.92550222678443, 364.3226950497605, 1460.6297868417887],
                [256.42380097331767, 364.27770361353487, 1460.6165849382387]]
        elbowJC = [[np.array([633.667075873457, 304.955421154148, 1256.077995412865]),
                    np.array([-129.169522182155, 316.867164398512, 1258.064407167222])],
                   [[[633.8107013869995, 303.96579004975194, 1256.07658506845],
                     [634.3524799178464, 305.0538658933253, 1256.799473014224],
                     [632.9532180390149, 304.85083190737765, 1256.770431750491]],
                    [[-129.32391792749496, 315.8807291324946, 1258.008662931836],
                     [-128.45117135279028, 316.79382333592827, 1257.3726028780698],
                     [-128.49119037560908, 316.72030884193634, 1258.7843373067021]]],
                   [[793.3281430325068, 451.2913478825204, 1084.4325513020426],
                    [-272.4594189740742, 485.801522109477, 1091.3666238350822]]]
        expected = [[[793.3281430325068, 451.2913478825204, 1084.4325513020426],
                     [-272.4594189740742, 485.801522109477, 1091.3666238350822]],
                    [[[793.771337279616, 450.4487918719012, 1084.1264823093322],
                      [794.013547076896, 451.3897926216976, 1085.154028903402],
                      [792.7503886251119, 450.761812234714, 1085.053672741407]],
                     [[-272.92507281675125, 485.0120241803687, 1090.9667994752267],
                      [-271.74106814470946, 485.7281810468936, 1090.6748195459295],
                      [-271.9425644638384, 485.1921666233502, 1091.967911874857]]]]

        result = pyCGM.wristJointCenter(frame, shoulderJC, wand, elbowJC)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

    def testHandJointCenter(self):
        frame = {'RWRA': np.array([ 776.51898193,  495.68103027, 1108.38464355]),
                 'RWRB': np.array([ 830.9072876 ,  436.75341797, 1119.11901855]),
                 'RFIN': np.array([ 863.71374512,  524.4475708 , 1074.54248047]),
                 'LWRA': np.array([-249.28146362,  525.32977295, 1117.09057617]),
                 'LWRB': np.array([-311.77532959,  477.22512817, 1125.1619873 ]),
                 'LFIN': np.array([-326.65890503,  558.34338379, 1091.04284668])}
        elbowJC = [[np.array([633.66707587, 304.95542115, 1256.07799541]),
                    np.array([-129.16952218, 316.8671644, 1258.06440717])],
                   [[[633.8107013869995, 303.96579004975194, 1256.07658506845],
                     [634.3524799178464, 305.0538658933253, 1256.799473014224],
                     [632.9532180390149, 304.85083190737765, 1256.770431750491]],
                    [[-129.32391792749496, 315.8807291324946, 1258.008662931836],
                     [-128.45117135279028, 316.79382333592827, 1257.3726028780698],
                     [-128.49119037560908, 316.72030884193634, 1258.7843373067021]]],
                   [[793.3281430325068, 451.2913478825204, 1084.4325513020426],
                    [-272.4594189740742, 485.801522109477, 1091.3666238350822]]]
        wristJC = [[[793.3281430325068, 451.2913478825204, 1084.4325513020426],
                    [-272.4594189740742, 485.801522109477, 1091.3666238350822]],
                   [[[793.771337279616, 450.4487918719012, 1084.1264823093322],
                     [794.013547076896, 451.3897926216976, 1085.154028903402],
                     [792.7503886251119, 450.761812234714, 1085.053672741407]],
                    [[-272.92507281675125, 485.0120241803687, 1090.9667994752267],
                     [-271.74106814470946, 485.7281810468936, 1090.6748195459295],
                     [-271.9425644638384, 485.1921666233502, 1091.967911874857]]]]
        vsk = {'RightHandThickness': 34.0, 'LeftHandThickness': 34.0}
        expected = [[np.array([859.80614366, 517.28239823, 1051.97278944]),
                     np.array([-324.53477798, 551.88744289, 1068.02526837])],
                    [[[859.9567597867737, 517.5924123242138, 1052.9115152009197],
                      [859.0797567344147, 517.9612045889317, 1051.8651606187454],
                      [859.1355641971873, 516.6167307529585, 1052.300218811959]],
                     [[-324.61994077156373, 552.1589330842497, 1068.9839343010813],
                      [-325.3329318534787, 551.2929248618385, 1068.1227296356121],
                      [-323.938374013488, 551.1305800350597, 1068.2925901317217]]]]

        result = pyCGM.handJointCenter(frame, elbowJC, wristJC, vsk)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

class TestLowerBodyAxis(unittest.TestCase):

    def testPelvisJointCenter(self):
        frame = {'RASI': np.array([357.90066528, 377.69210815, 1034.97253418]),
                 'LASI': np.array([145.31594849, 405.79052734, 1030.81445312]),
                 'RPSI': np.array([274.00466919, 205.64402771, 1051.76452637]),
                 'LPSI': np.array([189.15231323, 214.86122131, 1052.73486328]), }
        expected = [np.array([251.60830688, 391.74131775, 1032.89349365]),
                    np.array([[251.74063624, 392.72694721, 1032.78850073],
                              [250.61711554, 391.87232862, 1032.8741063],
                              [251.60295336, 391.84795134, 1033.88777762]]),
                    np.array([231.57849121, 210.25262451, 1052.24969482])]

        result = pyCGM.pelvisJointCenter(frame)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)
        np.testing.assert_almost_equal(result[2], expected[2], rounding_precision)

    def testHipJointCenter(self):
        pel_origin = [251.608306884766, 391.741317749023, 1032.893493652344]
        pel_x = [251.740636241119, 392.726947206848, 1032.788500732036]
        pel_y = [250.617115540376, 391.872328624646, 1032.874106304030]
        pel_z = [251.602953357582, 391.847951338178, 1033.887777624562]
        vsk = {'MeanLegLength': 940.0, 'R_AsisToTrocanterMeasure': 72.512,
               'L_AsisToTrocanterMeasure': 72.512, 'InterAsisDistance': 215.908996582031}
        expected = [[182.57097863, 339.43231855, 935.52900126],
                    [308.38050472, 322.80342417, 937.98979061]]

        result = pyCGM.hipJointCenter(None, pel_origin, pel_x, pel_y, pel_z, vsk)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

    def testHipAxisCenter(self):
        l_hip_jc = [182.57097863, 339.43231855, 935.52900126]
        r_hip_jc = [308.38050472, 322.80342417, 937.98979061]
        pelvis_axis = [np.array([251.60830688, 391.74131775, 1032.89349365]),
                       np.array([[251.74063624, 392.72694721, 1032.78850073],
                              [250.61711554, 391.87232862, 1032.8741063],
                              [251.60295336, 391.84795134, 1033.88777762]]),
                       np.array([231.57849121, 210.25262451, 1052.24969482])]
        expected = [[245.47574167208043, 331.1178713574418, 936.7593959314677],
                  [[245.60807102843359, 332.10350081526684, 936.6544030111602],
                   [244.48455032769033, 331.2488822330648, 936.7400085831541],
                   [245.47038814489719, 331.22450494659665, 937.7536799036861]]]

        result = pyCGM.hipAxisCenter(l_hip_jc, r_hip_jc, pelvis_axis)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)

    def testKneeJointCenter(self):
        frame = {'RTHI': np.array([426.50338745, 262.65310669, 673.66247559]),
                 'LTHI': np.array([51.93867874, 320.01849365, 723.03186035]),
                 'RKNE': np.array([416.98687744, 266.22558594, 524.04089355]),
                 'LKNE': np.array([84.62355804, 286.69122314, 529.39819336])}
        hip_JC = [[182.57097863, 339.43231855, 935.52900126], [308.38050472, 322.80342417, 937.98979061]]
        delta = 0
        vsk = {'RightKneeWidth': 105.0, 'LeftKneeWidth': 105.0}
        expected = [np.array([364.17774614, 292.17051722, 515.19181496]),
                    np.array([143.55478579, 279.90370346, 524.78408753]),
                    np.array([[[364.61959153, 293.06758353, 515.18513093],
                               [363.29019771, 292.60656648, 515.04309095],
                               [364.04724541, 292.24216264, 516.18067112]],
                              [[143.65611282, 280.88685896, 524.63197541],
                               [142.56434499, 280.01777943, 524.86163553],
                               [143.64837987, 280.04650381, 525.76940383]]])]

        result = pyCGM.kneeJointCenter(frame, hip_JC, delta, vsk)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)
        np.testing.assert_almost_equal(result[2], expected[2], rounding_precision)

    def testAnkleJointCenter(self):
        frame = {'RTIB': np.array([433.97537231, 211.93408203, 273.3008728 ]),
                 'LTIB': np.array([50.04016495, 235.90718079, 364.32226562]),
                 'RANK': np.array([422.77005005, 217.74053955, 92.86152649]),
                 'LANK': np.array([58.57380676, 208.54806519, 86.16953278])}
        knee_JC = [np.array([364.17774614, 292.17051722, 515.19181496]),
                   np.array([143.55478579, 279.90370346, 524.78408753]),
                   np.array([[[364.61959153, 293.06758353, 515.18513093],
                           [363.29019771, 292.60656648, 515.04309095],
                           [364.04724541, 292.24216264, 516.18067112]],
                          [[143.65611282, 280.88685896, 524.63197541],
                           [142.56434499, 280.01777943, 524.86163553],
                           [143.64837987, 280.04650381, 525.76940383]]])]
        delta = 0
        vsk = {'RightAnkleWidth': 70.0, 'LeftAnkleWidth': 70.0,
               'RightTibialTorsion': 0.0, 'LeftTibialTorsion': 0.0}
        expected = [np.array([393.76181608, 247.67829633, 87.73775041]),
                    np.array([98.74901939, 219.46930221, 80.6306816]),
                    [[np.array([394.48171575, 248.37201348, 87.715368]),
                      np.array([393.07114384, 248.39110006, 87.61575574]),
                      np.array([393.69314056, 247.78157916, 88.73002876])],
                     [np.array([98.47494966, 220.42553803, 80.52821783]),
                      np.array([97.79246671, 219.20927275, 80.76255901]),
                      np.array([98.84848169, 219.60345781, 81.61663775])]]]

        result = pyCGM.ankleJointCenter(frame, knee_JC, delta, vsk)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)
        np.testing.assert_almost_equal(result[2], expected[2], rounding_precision)

    def testFootJointCenter(self):
        frame = {'RTOE': np.array([442.81997681, 381.62280273, 42.66047668]),
                 'LTOE': np.array([39.43652725, 382.44522095, 41.78911591])}
        vsk = {'RightStaticRotOff': 0.015683497632642047, 'RightStaticPlantFlex': 0.2702417907002757,
               'LeftStaticRotOff': 0.009402910292403022, 'LeftStaticPlantFlex': 0.20251085737834015}
        ankle_JC = [np.array([393.76181608, 247.67829633, 87.73775041]),
                    np.array([98.74901939, 219.46930221, 80.6306816]),
                    [[np.array([394.48171575, 248.37201348, 87.715368]),
                      np.array([393.07114384, 248.39110006, 87.61575574]),
                      np.array([393.69314056, 247.78157916, 88.73002876])],
                     [np.array([98.47494966, 220.42553803, 80.52821783]),
                      np.array([97.79246671, 219.20927275, 80.76255901]),
                      np.array([98.84848169, 219.60345781, 81.61663775])]]]
        knee_JC = [np.array([364.17774614, 292.17051722, 515.19181496]),
                   np.array([143.55478579, 279.90370346, 524.78408753]),
                   np.array([[[364.61959153, 293.06758353, 515.18513093],
                           [363.29019771, 292.60656648, 515.04309095],
                           [364.04724541, 292.24216264, 516.18067112]],
                          [[143.65611282, 280.88685896, 524.63197541],
                           [142.56434499, 280.01777943, 524.86163553],
                           [143.64837987, 280.04650381, 525.76940383]]])]
        delta = 0
        expected = [np.array([442.81997681, 381.62280273, 42.66047668]),
                    np.array([39.43652725, 382.44522095, 41.78911591]),
                    [[[442.8462412676692, 381.6513024007671, 43.65972537588915],
                      [441.8773505621594, 381.95630350196393, 42.67574106247485],
                      [442.48716163075153, 380.68048378251575, 42.69610043598381]],
                     [[39.566526257915626, 382.50901000467115, 42.778575967950964],
                      [38.493133283871245, 382.1460684058263, 41.932348504971834],
                      [39.74166341694723, 381.493150197213, 41.81040458481808]]]]

        result = pyCGM.footJointCenter(frame, vsk, ankle_JC, knee_JC, delta)
        np.testing.assert_almost_equal(result[0], expected[0], rounding_precision)
        np.testing.assert_almost_equal(result[1], expected[1], rounding_precision)
        np.testing.assert_almost_equal(result[2], expected[2], rounding_precision)